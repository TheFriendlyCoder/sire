name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Linter
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Check code style
        # NOTE: we have to set the BASH shell option 'globstar'
        #       for the **/*.rs syntax to work. Apparently this
        #       feature is disabled by default for some reason
        run: |
          shopt -s globstar
          rustfmt --check ./src/**/*.rs
      - name: Validate package
        # This is equivalent to "cargo publish --dry-run"
        # Ensures the package metadata is configured properly
        run: cargo package --verbose
      # show the contents of the generated crate, for reference purposes
      - name: Show package contents
        run: cargo package --list

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # we need the nightly builds of Rust to enable the instrumentation
      # necessary for the code coverage metrics
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Run tests
        run: ./run_tests.sh
      # Reference: https://github.com/actions-rs/grcov
      - id: coverage
        uses: actions-rs/grcov@v0.1
        # Configuration parameters for grcov are found in the ./.github/actions-rs/grcov.yml file
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info

  publish:
    needs: [precheck, test]
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          # build binaries for every supported platform
          - os: ubuntu-latest
            binary-name: "sire"
            asset-name: "sire" # asset names must be unique within a given release
          - os: macos-latest
            binary-name: "sire"
            asset-name: "sire_mac" # asset names must be unique within a given release
          - os: windows-latest
            binary-name: "sire.exe"
            asset-name: "sire.exe" # asset names must be unique within a given release

    steps:
      - uses: actions/checkout@v2
      - name: Build ${{ matrix.job.os }}
        run: cargo build --verbose
      - name: Publish ${{ matrix.job.os }}
        # plugin docs: https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.job.asset-name }}
          path: target/debug/${{ matrix.job.binary-name }}
